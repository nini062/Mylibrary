uWhmDwAAQBAJ,http://books.google.com/books/content?id=uWhmDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,たのしいプログラミング　Pythonではじめよう！,Jason R. Briggs,株式会社 オーム社,2014-02-25,プログラミングってこんなに楽しい！ 「いつかはプログラミングしたい！ でも私には難しそう……」と二の足を踏んでいる方。 「プログラミングできたら便利！ でも勉強するのはつまらない……」と敬遠している方。 「プログラミングできたらかっこいい！ でも作りたいアプリとかない……」とあきらめている方。 世界中で大人気の小難しくないプログラミング言語Pythonなら、覚えることも最小限。この本を読んで、楽しいプログラミングの世界に飛び込んでみましょう！ 面白い例題やパズルを楽しみながら、愉快でカラフルなイラストと一緒にかっこいいプログラミングを学ぶことができます。 本書は、“Python for Kids：A Playful Introduction to Programming”を翻訳したものです。 訳者まえがき はじめに 第I部 プログラムの作り方 第1章 ニョロニョロしない蛇もいるんですよ 1.1 「言語」とコンピューター 1.2 Pythonをインストールしよう 1.3 Pythonのインストールが終わったら 1.4 プログラムを保存する方法 1.5 この章でわかったこと 第2章 計算と変数 2.1 Pythonで計算をしてみる 2.2 変数は荷札みたい 2.3 変数を使いこなす 2.4 この章でわかったこと 第3章 文字列、リスト、タプル、そして辞書 3.1 文字列 3.2 文字列よりも強力な「リスト」 3.3 タプル 3.4 Pythonの辞書で言葉の意味は探せません 3.5 この章でわかったこと 3.6 自分でやってみよう 第4章 カメさんでお絵かき 4.1 Pythonのturtleモジュールを使う 4.2 この章でわかったこと 4.3 自分でやってみよう 第5章 質問なら「if」と「else」におまかせ 5.1 if 文 5.2 ifとelseの組み合わせ 5.3 if と elif 文 5.4 条件をつなげる 5.5 値のない変数とNone 5.6 文字列と数値の違い 5.7 この章でわかったこと 5.8 自分でやってみよう 第6章 くるくるまわれ！ 6.1 forループを使ってみる 6.2 繰り返しをするための他の方法 6.3 この章でわかったこと 6.4 自分でやってみよう 第7章 関数とモジュールを使ってプログラムを再利用 7.1 関数の使い方 7.2 モジュールを使う 7.3 この章でわかったこと 7.4 自分でやってみよう 第8章 クラスとオブジェクトの使い方 8.1 モノをクラスに当てはめる 8.2 クラスとオブジェクトの便利な機能 8.3 オブジェクトを初期化する 8.4 この章でわかったこと 8.5 自分でやってみよう 第9章 Pythonの組み込み関数 9.1 組み込み関数を使う 9.2 ファイルを使う 9.3 この章でわかったこと 9.4 自分でやってみよう 第10章 便利に使えるモジュールたち 10.1 copyモジュールを使ってコピーを作る 10.2 keywordでキーワード？ 10.3 randomのラは乱数のラ 10.4 sysモジュールでPythonシェルを操作 10.5 timeモジュールで時間を操作 10.6 pickleで情報を漬け物に 10.7 この章でわかったこと 10.8 自分でやってみよう 第11章 カメさんでもっとお絵かき 11.1 最初は簡単な四角形から 11.2 星形を描いてみる 11.3 図形だけ？絵も描けるよ 11.4 いろいろな「いろ」 11.5 関数で正方形 11.6 色つき正方形も関数で 11.7 星に色をつけて本物っぽく 11.8 この章でわかったこと 11.9 自分でやってみよう 第12章 tkinterでもっとすごいグラフィックス 12.1 ボタンを作ろう 12.2 超便利なキーワード引数 12.3 お絵かきはキャンバスの上で 12.4 線を描いてみる 12.5 四角形を描くのがこんなに簡単に 12.6 アーチを描いてみる 12.7 多角形を描いてみる 12.8 文字を書いてみる 12.9 画像を表示してみる 12.10 アニメーションを作ってみよう 12.11 リモートコントロール 12.12 識別番号って何だろう 12.13 この章でわかったこと 12.14 自分でやってみよう 第II部 Bounce!ゲーム 第13章 Bounce!ゲームを作ってみよう 13.1 跳ねるボールを打ち返せ 13.2 ゲームはキャンバスの上に 13.3 ボールはクラス 13.4 ボールよ動け！ 13.5 この章でわかったこと 第14章 Bounce!ゲームを完成させよう 14.1 ラケットを作る 14.2 ゲームのルールは？ 14.3 この章でわかったこと 14.4 自分でやってみよう 第III部 ミスター・スティックマン脱出ゲーム 第15章 ミスター・スティックマン脱出ゲームのグラフィックスを作る 15.1 ミスター・スティックマン脱出ゲームの作成計画 15.2 GIMPのインストール 15.3 ゲームの部品を作る 15.4 この章でわかったこと 第16章 ミスター・スティックマン脱出ゲームを開発する 16.1 Gameクラスを作る 16.2 座標クラスを作る 16.3 衝突を検出する 16.4 スプライトクラスを作る 16.5 床の追加 16.6 この章でわかったこと 16.7 自分でやってみよう 第17章 ミスター・スティックマンを作る 17.1 スティックマンを追加する 17.2 スティックマンの左右移動 17.3 スティックマンをジャンプさせる 17.4 ここまでに作ったもの 17.5 この章でわかったこと 第18章 ミスター・スティックマン脱出ゲームを完成させよう 18.1 スティックマンをアニメーションさせる 18.2 スティックマンを動かしてみる 18.3 ドア！ 18.4 ゲーム完成 18.5 この章でわかったこと 18.6 自分でやってみよう これからどうしよう？ 付録：Pythonのキーワード 語集 索引,入力なし,入力なし,入力なし,持ってる,未読,
uWhmDwAAQBAJ,http://books.google.com/books/content?id=uWhmDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,たのしいプログラミング　Pythonではじめよう！,Jason R. Briggs,株式会社 オーム社,2014-02-25,プログラミングってこんなに楽しい！ 「いつかはプログラミングしたい！ でも私には難しそう……」と二の足を踏んでいる方。 「プログラミングできたら便利！ でも勉強するのはつまらない……」と敬遠している方。 「プログラミングできたらかっこいい！ でも作りたいアプリとかない……」とあきらめている方。 世界中で大人気の小難しくないプログラミング言語Pythonなら、覚えることも最小限。この本を読んで、楽しいプログラミングの世界に飛び込んでみましょう！ 面白い例題やパズルを楽しみながら、愉快でカラフルなイラストと一緒にかっこいいプログラミングを学ぶことができます。 本書は、“Python for Kids：A Playful Introduction to Programming”を翻訳したものです。 訳者まえがき はじめに 第I部 プログラムの作り方 第1章 ニョロニョロしない蛇もいるんですよ 1.1 「言語」とコンピューター 1.2 Pythonをインストールしよう 1.3 Pythonのインストールが終わったら 1.4 プログラムを保存する方法 1.5 この章でわかったこと 第2章 計算と変数 2.1 Pythonで計算をしてみる 2.2 変数は荷札みたい 2.3 変数を使いこなす 2.4 この章でわかったこと 第3章 文字列、リスト、タプル、そして辞書 3.1 文字列 3.2 文字列よりも強力な「リスト」 3.3 タプル 3.4 Pythonの辞書で言葉の意味は探せません 3.5 この章でわかったこと 3.6 自分でやってみよう 第4章 カメさんでお絵かき 4.1 Pythonのturtleモジュールを使う 4.2 この章でわかったこと 4.3 自分でやってみよう 第5章 質問なら「if」と「else」におまかせ 5.1 if 文 5.2 ifとelseの組み合わせ 5.3 if と elif 文 5.4 条件をつなげる 5.5 値のない変数とNone 5.6 文字列と数値の違い 5.7 この章でわかったこと 5.8 自分でやってみよう 第6章 くるくるまわれ！ 6.1 forループを使ってみる 6.2 繰り返しをするための他の方法 6.3 この章でわかったこと 6.4 自分でやってみよう 第7章 関数とモジュールを使ってプログラムを再利用 7.1 関数の使い方 7.2 モジュールを使う 7.3 この章でわかったこと 7.4 自分でやってみよう 第8章 クラスとオブジェクトの使い方 8.1 モノをクラスに当てはめる 8.2 クラスとオブジェクトの便利な機能 8.3 オブジェクトを初期化する 8.4 この章でわかったこと 8.5 自分でやってみよう 第9章 Pythonの組み込み関数 9.1 組み込み関数を使う 9.2 ファイルを使う 9.3 この章でわかったこと 9.4 自分でやってみよう 第10章 便利に使えるモジュールたち 10.1 copyモジュールを使ってコピーを作る 10.2 keywordでキーワード？ 10.3 randomのラは乱数のラ 10.4 sysモジュールでPythonシェルを操作 10.5 timeモジュールで時間を操作 10.6 pickleで情報を漬け物に 10.7 この章でわかったこと 10.8 自分でやってみよう 第11章 カメさんでもっとお絵かき 11.1 最初は簡単な四角形から 11.2 星形を描いてみる 11.3 図形だけ？絵も描けるよ 11.4 いろいろな「いろ」 11.5 関数で正方形 11.6 色つき正方形も関数で 11.7 星に色をつけて本物っぽく 11.8 この章でわかったこと 11.9 自分でやってみよう 第12章 tkinterでもっとすごいグラフィックス 12.1 ボタンを作ろう 12.2 超便利なキーワード引数 12.3 お絵かきはキャンバスの上で 12.4 線を描いてみる 12.5 四角形を描くのがこんなに簡単に 12.6 アーチを描いてみる 12.7 多角形を描いてみる 12.8 文字を書いてみる 12.9 画像を表示してみる 12.10 アニメーションを作ってみよう 12.11 リモートコントロール 12.12 識別番号って何だろう 12.13 この章でわかったこと 12.14 自分でやってみよう 第II部 Bounce!ゲーム 第13章 Bounce!ゲームを作ってみよう 13.1 跳ねるボールを打ち返せ 13.2 ゲームはキャンバスの上に 13.3 ボールはクラス 13.4 ボールよ動け！ 13.5 この章でわかったこと 第14章 Bounce!ゲームを完成させよう 14.1 ラケットを作る 14.2 ゲームのルールは？ 14.3 この章でわかったこと 14.4 自分でやってみよう 第III部 ミスター・スティックマン脱出ゲーム 第15章 ミスター・スティックマン脱出ゲームのグラフィックスを作る 15.1 ミスター・スティックマン脱出ゲームの作成計画 15.2 GIMPのインストール 15.3 ゲームの部品を作る 15.4 この章でわかったこと 第16章 ミスター・スティックマン脱出ゲームを開発する 16.1 Gameクラスを作る 16.2 座標クラスを作る 16.3 衝突を検出する 16.4 スプライトクラスを作る 16.5 床の追加 16.6 この章でわかったこと 16.7 自分でやってみよう 第17章 ミスター・スティックマンを作る 17.1 スティックマンを追加する 17.2 スティックマンの左右移動 17.3 スティックマンをジャンプさせる 17.4 ここまでに作ったもの 17.5 この章でわかったこと 第18章 ミスター・スティックマン脱出ゲームを完成させよう 18.1 スティックマンをアニメーションさせる 18.2 スティックマンを動かしてみる 18.3 ドア！ 18.4 ゲーム完成 18.5 この章でわかったこと 18.6 自分でやってみよう これからどうしよう？ 付録：Pythonのキーワード 語集 索引,入力なし,入力なし,入力なし,持ってる,未読,
uWhmDwAAQBAJ,http://books.google.com/books/content?id=uWhmDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,たのしいプログラミング　Pythonではじめよう！,Jason R. Briggs,株式会社 オーム社,2014-02-25,プログラミングってこんなに楽しい！ 「いつかはプログラミングしたい！ でも私には難しそう……」と二の足を踏んでいる方。 「プログラミングできたら便利！ でも勉強するのはつまらない……」と敬遠している方。 「プログラミングできたらかっこいい！ でも作りたいアプリとかない……」とあきらめている方。 世界中で大人気の小難しくないプログラミング言語Pythonなら、覚えることも最小限。この本を読んで、楽しいプログラミングの世界に飛び込んでみましょう！ 面白い例題やパズルを楽しみながら、愉快でカラフルなイラストと一緒にかっこいいプログラミングを学ぶことができます。 本書は、“Python for Kids：A Playful Introduction to Programming”を翻訳したものです。 訳者まえがき はじめに 第I部 プログラムの作り方 第1章 ニョロニョロしない蛇もいるんですよ 1.1 「言語」とコンピューター 1.2 Pythonをインストールしよう 1.3 Pythonのインストールが終わったら 1.4 プログラムを保存する方法 1.5 この章でわかったこと 第2章 計算と変数 2.1 Pythonで計算をしてみる 2.2 変数は荷札みたい 2.3 変数を使いこなす 2.4 この章でわかったこと 第3章 文字列、リスト、タプル、そして辞書 3.1 文字列 3.2 文字列よりも強力な「リスト」 3.3 タプル 3.4 Pythonの辞書で言葉の意味は探せません 3.5 この章でわかったこと 3.6 自分でやってみよう 第4章 カメさんでお絵かき 4.1 Pythonのturtleモジュールを使う 4.2 この章でわかったこと 4.3 自分でやってみよう 第5章 質問なら「if」と「else」におまかせ 5.1 if 文 5.2 ifとelseの組み合わせ 5.3 if と elif 文 5.4 条件をつなげる 5.5 値のない変数とNone 5.6 文字列と数値の違い 5.7 この章でわかったこと 5.8 自分でやってみよう 第6章 くるくるまわれ！ 6.1 forループを使ってみる 6.2 繰り返しをするための他の方法 6.3 この章でわかったこと 6.4 自分でやってみよう 第7章 関数とモジュールを使ってプログラムを再利用 7.1 関数の使い方 7.2 モジュールを使う 7.3 この章でわかったこと 7.4 自分でやってみよう 第8章 クラスとオブジェクトの使い方 8.1 モノをクラスに当てはめる 8.2 クラスとオブジェクトの便利な機能 8.3 オブジェクトを初期化する 8.4 この章でわかったこと 8.5 自分でやってみよう 第9章 Pythonの組み込み関数 9.1 組み込み関数を使う 9.2 ファイルを使う 9.3 この章でわかったこと 9.4 自分でやってみよう 第10章 便利に使えるモジュールたち 10.1 copyモジュールを使ってコピーを作る 10.2 keywordでキーワード？ 10.3 randomのラは乱数のラ 10.4 sysモジュールでPythonシェルを操作 10.5 timeモジュールで時間を操作 10.6 pickleで情報を漬け物に 10.7 この章でわかったこと 10.8 自分でやってみよう 第11章 カメさんでもっとお絵かき 11.1 最初は簡単な四角形から 11.2 星形を描いてみる 11.3 図形だけ？絵も描けるよ 11.4 いろいろな「いろ」 11.5 関数で正方形 11.6 色つき正方形も関数で 11.7 星に色をつけて本物っぽく 11.8 この章でわかったこと 11.9 自分でやってみよう 第12章 tkinterでもっとすごいグラフィックス 12.1 ボタンを作ろう 12.2 超便利なキーワード引数 12.3 お絵かきはキャンバスの上で 12.4 線を描いてみる 12.5 四角形を描くのがこんなに簡単に 12.6 アーチを描いてみる 12.7 多角形を描いてみる 12.8 文字を書いてみる 12.9 画像を表示してみる 12.10 アニメーションを作ってみよう 12.11 リモートコントロール 12.12 識別番号って何だろう 12.13 この章でわかったこと 12.14 自分でやってみよう 第II部 Bounce!ゲーム 第13章 Bounce!ゲームを作ってみよう 13.1 跳ねるボールを打ち返せ 13.2 ゲームはキャンバスの上に 13.3 ボールはクラス 13.4 ボールよ動け！ 13.5 この章でわかったこと 第14章 Bounce!ゲームを完成させよう 14.1 ラケットを作る 14.2 ゲームのルールは？ 14.3 この章でわかったこと 14.4 自分でやってみよう 第III部 ミスター・スティックマン脱出ゲーム 第15章 ミスター・スティックマン脱出ゲームのグラフィックスを作る 15.1 ミスター・スティックマン脱出ゲームの作成計画 15.2 GIMPのインストール 15.3 ゲームの部品を作る 15.4 この章でわかったこと 第16章 ミスター・スティックマン脱出ゲームを開発する 16.1 Gameクラスを作る 16.2 座標クラスを作る 16.3 衝突を検出する 16.4 スプライトクラスを作る 16.5 床の追加 16.6 この章でわかったこと 16.7 自分でやってみよう 第17章 ミスター・スティックマンを作る 17.1 スティックマンを追加する 17.2 スティックマンの左右移動 17.3 スティックマンをジャンプさせる 17.4 ここまでに作ったもの 17.5 この章でわかったこと 第18章 ミスター・スティックマン脱出ゲームを完成させよう 18.1 スティックマンをアニメーションさせる 18.2 スティックマンを動かしてみる 18.3 ドア！ 18.4 ゲーム完成 18.5 この章でわかったこと 18.6 自分でやってみよう これからどうしよう？ 付録：Pythonのキーワード 語集 索引,入力なし,入力なし,入力なし,持ってる,未読,
uWhmDwAAQBAJ,http://books.google.com/books/content?id=uWhmDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,たのしいプログラミング　Pythonではじめよう！,Jason R. Briggs,株式会社 オーム社,2014-02-25,プログラミングってこんなに楽しい！ 「いつかはプログラミングしたい！ でも私には難しそう……」と二の足を踏んでいる方。 「プログラミングできたら便利！ でも勉強するのはつまらない……」と敬遠している方。 「プログラミングできたらかっこいい！ でも作りたいアプリとかない……」とあきらめている方。 世界中で大人気の小難しくないプログラミング言語Pythonなら、覚えることも最小限。この本を読んで、楽しいプログラミングの世界に飛び込んでみましょう！ 面白い例題やパズルを楽しみながら、愉快でカラフルなイラストと一緒にかっこいいプログラミングを学ぶことができます。 本書は、“Python for Kids：A Playful Introduction to Programming”を翻訳したものです。 訳者まえがき はじめに 第I部 プログラムの作り方 第1章 ニョロニョロしない蛇もいるんですよ 1.1 「言語」とコンピューター 1.2 Pythonをインストールしよう 1.3 Pythonのインストールが終わったら 1.4 プログラムを保存する方法 1.5 この章でわかったこと 第2章 計算と変数 2.1 Pythonで計算をしてみる 2.2 変数は荷札みたい 2.3 変数を使いこなす 2.4 この章でわかったこと 第3章 文字列、リスト、タプル、そして辞書 3.1 文字列 3.2 文字列よりも強力な「リスト」 3.3 タプル 3.4 Pythonの辞書で言葉の意味は探せません 3.5 この章でわかったこと 3.6 自分でやってみよう 第4章 カメさんでお絵かき 4.1 Pythonのturtleモジュールを使う 4.2 この章でわかったこと 4.3 自分でやってみよう 第5章 質問なら「if」と「else」におまかせ 5.1 if 文 5.2 ifとelseの組み合わせ 5.3 if と elif 文 5.4 条件をつなげる 5.5 値のない変数とNone 5.6 文字列と数値の違い 5.7 この章でわかったこと 5.8 自分でやってみよう 第6章 くるくるまわれ！ 6.1 forループを使ってみる 6.2 繰り返しをするための他の方法 6.3 この章でわかったこと 6.4 自分でやってみよう 第7章 関数とモジュールを使ってプログラムを再利用 7.1 関数の使い方 7.2 モジュールを使う 7.3 この章でわかったこと 7.4 自分でやってみよう 第8章 クラスとオブジェクトの使い方 8.1 モノをクラスに当てはめる 8.2 クラスとオブジェクトの便利な機能 8.3 オブジェクトを初期化する 8.4 この章でわかったこと 8.5 自分でやってみよう 第9章 Pythonの組み込み関数 9.1 組み込み関数を使う 9.2 ファイルを使う 9.3 この章でわかったこと 9.4 自分でやってみよう 第10章 便利に使えるモジュールたち 10.1 copyモジュールを使ってコピーを作る 10.2 keywordでキーワード？ 10.3 randomのラは乱数のラ 10.4 sysモジュールでPythonシェルを操作 10.5 timeモジュールで時間を操作 10.6 pickleで情報を漬け物に 10.7 この章でわかったこと 10.8 自分でやってみよう 第11章 カメさんでもっとお絵かき 11.1 最初は簡単な四角形から 11.2 星形を描いてみる 11.3 図形だけ？絵も描けるよ 11.4 いろいろな「いろ」 11.5 関数で正方形 11.6 色つき正方形も関数で 11.7 星に色をつけて本物っぽく 11.8 この章でわかったこと 11.9 自分でやってみよう 第12章 tkinterでもっとすごいグラフィックス 12.1 ボタンを作ろう 12.2 超便利なキーワード引数 12.3 お絵かきはキャンバスの上で 12.4 線を描いてみる 12.5 四角形を描くのがこんなに簡単に 12.6 アーチを描いてみる 12.7 多角形を描いてみる 12.8 文字を書いてみる 12.9 画像を表示してみる 12.10 アニメーションを作ってみよう 12.11 リモートコントロール 12.12 識別番号って何だろう 12.13 この章でわかったこと 12.14 自分でやってみよう 第II部 Bounce!ゲーム 第13章 Bounce!ゲームを作ってみよう 13.1 跳ねるボールを打ち返せ 13.2 ゲームはキャンバスの上に 13.3 ボールはクラス 13.4 ボールよ動け！ 13.5 この章でわかったこと 第14章 Bounce!ゲームを完成させよう 14.1 ラケットを作る 14.2 ゲームのルールは？ 14.3 この章でわかったこと 14.4 自分でやってみよう 第III部 ミスター・スティックマン脱出ゲーム 第15章 ミスター・スティックマン脱出ゲームのグラフィックスを作る 15.1 ミスター・スティックマン脱出ゲームの作成計画 15.2 GIMPのインストール 15.3 ゲームの部品を作る 15.4 この章でわかったこと 第16章 ミスター・スティックマン脱出ゲームを開発する 16.1 Gameクラスを作る 16.2 座標クラスを作る 16.3 衝突を検出する 16.4 スプライトクラスを作る 16.5 床の追加 16.6 この章でわかったこと 16.7 自分でやってみよう 第17章 ミスター・スティックマンを作る 17.1 スティックマンを追加する 17.2 スティックマンの左右移動 17.3 スティックマンをジャンプさせる 17.4 ここまでに作ったもの 17.5 この章でわかったこと 第18章 ミスター・スティックマン脱出ゲームを完成させよう 18.1 スティックマンをアニメーションさせる 18.2 スティックマンを動かしてみる 18.3 ドア！ 18.4 ゲーム完成 18.5 この章でわかったこと 18.6 自分でやってみよう これからどうしよう？ 付録：Pythonのキーワード 語集 索引,入力なし,入力なし,入力なし,持ってる,未読,
iLrrDwAAQBAJ,http://books.google.com/books/content?id=iLrrDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,独習Python,山田祥寛,翔泳社,2020-06-22,手を動かしておぼえるPythonプログラミング ――独学に最適な“標準教科書” プログラミングの初学者に向けた独習シリーズに『独習Python』が新登場。 プログラミング言語入門書の執筆で定評のある山田祥寛氏による、 Python入門書の決定版です。 独習シリーズの強みである、手を動かしておぼえる（書いて実行して結果を確認する） 特長を生かし、Pythonの基本的な言語仕様から、標準ライブラリ、ユーザー定義関数、 オブジェクト指向構文、モジュールまで、サンプルプログラムを例示しながら 詳細かつ丁寧に解説します。 プログラミングの基礎知識がない方でも、解説→例題（サンプル）→理解度チェック という3つのステップで、Pythonでプログラミングを行う際に必要な知識・概念・機能を 体系的に習得できます。 プログラミングの入門者、これからPythonで開発を始めたい初学者から、再入門者、 学生・ホビープログラマまで、「一からPython言語を学びたい」「Pythonプログラミング の基本をしっかり身につけたい」という方におすすめの一冊です。 シリーズをもっと見る,入力なし,入力なし,入力なし,持ってる,未読,
iLrrDwAAQBAJ,http://books.google.com/books/content?id=iLrrDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api,独習Python,山田祥寛,翔泳社,2020-06-22,手を動かしておぼえるPythonプログラミング ――独学に最適な“標準教科書” プログラミングの初学者に向けた独習シリーズに『独習Python』が新登場。 プログラミング言語入門書の執筆で定評のある山田祥寛氏による、 Python入門書の決定版です。 独習シリーズの強みである、手を動かしておぼえる（書いて実行して結果を確認する） 特長を生かし、Pythonの基本的な言語仕様から、標準ライブラリ、ユーザー定義関数、 オブジェクト指向構文、モジュールまで、サンプルプログラムを例示しながら 詳細かつ丁寧に解説します。 プログラミングの基礎知識がない方でも、解説→例題（サンプル）→理解度チェック という3つのステップで、Pythonでプログラミングを行う際に必要な知識・概念・機能を 体系的に習得できます。 プログラミングの入門者、これからPythonで開発を始めたい初学者から、再入門者、 学生・ホビープログラマまで、「一からPython言語を学びたい」「Pythonプログラミング の基本をしっかり身につけたい」という方におすすめの一冊です。 シリーズをもっと見る,入力なし,入力なし,入力なし,持ってる,未読,
